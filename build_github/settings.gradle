pluginManagement {
    repositories {
        gradlePluginPortal()
        google()
        mavenCentral()
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
        maven {
            name "IMG.LY Artifactory"
            url "https://artifactory.img.ly/artifactory/maven"
            mavenContent {
                includeGroup("ly.img")
            }
        }
    }
}

rootProject.name = "CE.SDK Android Examples"
include ':showcases-app'
include ':catalog-app'
if (file("editor-version-details").exists()) {
    include ':editor-version-details'
}
include ':editor-version-details-dummy'
include ':editor-experimental'
include ':editor-core'
include ':editor-core-ui'
include ':editor-base'
include ':editor-apparel'
include ':editor-postcard'
include ':editor-design'
include ':editor-photo'
include ':editor-video'
include ':editor'

// Internal use only
def ubqRootPath = "../../"
def useLocalEngine = {
    def propertiesFile = new File(rootDir, "local.properties")
    if (!propertiesFile.exists()) return false
    def properties = new Properties()
    properties.load(propertiesFile.newDataInputStream())
    properties.containsKey("useLocalEngine") && properties.getProperty("useLocalEngine").toBoolean()
}

if (System.getenv("UBQ_USE_LOCAL_ENGINE") == "true" || useLocalEngine()) {
    includeBuild("$ubqRootPath/bindings/android") {
        name "engine"
        dependencySubstitution {
            substitute module('ly.img:engine') using project(':engine')
            substitute module('ly.img:engine-camera') using project(':engine-camera')
        }
    }
}
// Internal use only
