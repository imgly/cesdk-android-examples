plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'com.github.gmazzo.buildconfig'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.appdistribution'
}

String getLocalProperty(String property) {
    def propertiesFile = new File(rootDir, "local.properties")
    if (!propertiesFile.exists()) return null
    def properties = new Properties()
    properties.load(propertiesFile.newDataInputStream())
    return properties.getProperty(property)
}

android {
    namespace "ly.img.editor.catalog"
    compileSdk libs.versions.androidCompileSdk.get().toInteger()

    defaultConfig {
        def isCIBuild = System.getenv("UBQ_USE_LOCAL_ENGINE")?.toBoolean() ?: false
        def versionCodeValue = isCIBuild
            ? System.currentTimeMillis().toString().take(9).toInteger()
            : new File(projectDir, ".version").text.trim().toInteger()
        def versionNameValue = isCIBuild
            ? new File(rootDir.parentFile.parentFile, ".ubq-version").text.trim()
            : libs.versions.engine.get()

        applicationId "ly.img.cesdk.catalog"
        minSdk libs.versions.androidMinSdk.get().toInteger()
        targetSdk libs.versions.androidTargetSdk.get().toInteger()
        versionName versionNameValue
        versionCode versionCodeValue
        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a", "x86_64", "x86"
        }
        resourceConfigurations += ['en']
    }

    sourceSets {
        main {
            java.srcDirs += [
                "$rootDir/../cesdk_android_examples/engine-guides-custom-asset-source"
            ]
        }
    }

    signingConfigs {
        release {
            storeFile rootProject.file("android-release.keystore")
            storePassword System.getenv("CESDK_AND_KEYSTORE_PWD") ?: getLocalProperty("release_key_password")
            keyAlias "cesdk-dev"
            keyPassword System.getenv("CESDK_AND_KEYSTORE_PWD") ?: getLocalProperty("release_key_password")
        }
    }

    flavorDimensions += "version"
    productFlavors {
        store {
            dimension "version"
        }
        internal {
            dimension "version"
            firebaseAppDistribution {
                artifactType="APK"
                releaseNotes=System.getenv("CESDK_AND_BRANCH_NAME")
                groups="internal"
            }
        }
    }

    buildTypes {
        release {
            firebaseCrashlytics {
                // Enable processing and uploading of native symbols to Firebase servers.
                // By default, this is disabled to improve build speeds.
                // This flag must be enabled to see properly-symbolicated native
                // stack traces in the Crashlytics dashboard.
                nativeSymbolUploadEnabled true
            }
            def shrinkAndMinifyEnabled = System.getenv("CESDK_SHRINK_AND_MINIFY_ENABLED") == null
                    || System.getenv("CESDK_SHRINK_AND_MINIFY_ENABLED") == "true"
            signingConfig signingConfigs.release
            minifyEnabled shrinkAndMinifyEnabled
            shrinkResources shrinkAndMinifyEnabled
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = libs.versions.kotlinCompilerExtension.get()
    }
}

buildConfig {
    className "CatalogBuildConfig"
    packageName "ly.img.editor.catalog"
    buildConfigField String, "BRANCH_NAME", System.getenv("CESDK_AND_BRANCH_NAME") ?: ""
    buildConfigField String, "BUILD_NAME", System.getenv("CESDK_AND_BUILD_NAME") ?: ""
    buildConfigField String, "LICENSE", System.env.CESDK_APP_STORE_LICENSE ?: getLocalProperty("license") ?: ""
    buildConfigField String, "UNSPLASH_HOST", System.env.CESDK_AND_UNSPLASH_HOST ?: getLocalProperty("unsplash_host") ?: ""
    buildConfigField String, "REMOTE_ASSET_SOURCE_HOST", System.env.CESDK_AND_REMOTE_ASSET_SOURCE_HOST ?: getLocalProperty("remote_asset_source_host") ?: ""
    buildConfigField int, "VERSION_CODE", android.defaultConfig.versionCode ?: 0
}

dependencies {
    implementation project(":editor")
    internalImplementation project(":editor-version-details")
    storeImplementation project(":editor-version-details-dummy")

    implementation platform(libs.firebase.bom)
    implementation libs.firebase.dynamicLinks
    implementation libs.firebase.analytics
    implementation libs.firebase.crashlytics
    implementation libs.firebase.crashlytics.ndk

    implementation platform(libs.compose.bom)
    implementation libs.compose.material3
    debugImplementation libs.compose.tooling
    implementation libs.compose.preview
    implementation libs.compose.navigation

    implementation libs.coil.compose

    implementation(libs.material) {
        because "MaterialComponents DayNight theme"
    }
}

task incrementVersionCode() {
    doLast {
        def versionFile = new File(projectDir, ".version")
        def current = versionFile.text.trim().toInteger()
        versionFile.write((current + 1).toString())
    }
}

tasks.configureEach { task ->
    if (task.name == 'assembleRelease') {
        task.finalizedBy "uploadCrashlyticsSymbolFileRelease"
    }
}
