plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

def localLicense = {
    def propertiesFile = new File(rootDir, "local.properties")
    if (!propertiesFile.exists()) return null
    def properties = new Properties()
    properties.load(propertiesFile.newDataInputStream())
    properties.getProperty("license")
}

android {
    namespace 'ly.img.cesdk.core'
    compileSdk libs.versions.androidCompileSdk.get().toInteger()

    defaultConfig {
        minSdk libs.versions.androidMinSdk.get().toInteger()
        targetSdk libs.versions.androidTargetSdk.get().toInteger()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes.each {
        it.buildConfigField 'String', 'LICENSE', "\"${System.env.CESDK_APP_STORE_LICENSE ?: localLicense() ?: ""}\""
        it.buildConfigField 'String', 'UNSPLASH_HOST', "\"${System.env.CESDK_AND_UNSPLASH_HOST ?: ""}\""
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = libs.versions.kotlinCompilerExtension.get()
    }
}

dependencies {
    api findProject(":ubq-android-engine") ?: libs.cesdk.engine

    api platform(libs.compose.bom)
    api libs.compose.material3

    api(libs.compose.activity) {
        because "BackHandler"
    }
    api libs.compose.viewmodel

    api libs.kotlin.coroutines

    implementation libs.coil.compose

    implementation libs.shimmer
}